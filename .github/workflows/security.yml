name: Security Pipeline (Lean)

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  bandit_scan:
    name: Bandit (Python SAST)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Bandit
        run: pip install --upgrade pip bandit

      # -lll => HIGH severity only; remove -lll if you want all severities
      - name: Run Bandit Scan (fail on HIGH)
        run: |
          bandit -r . -f json -o bandit_report.json -lll

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.json
          if-no-files-found: error

  trivy_fs_scan:
    name: Trivy (Filesystem / Dependencies)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      # Keep learning signals but don't fail the job; set --exit-code 0
      - name: Trivy Filesystem Scan (warn on HIGH/CRITICAL)
        run: trivy fs --severity HIGH,CRITICAL --exit-code 0 --format json --output trivy_fs.json .

      - name: Upload Trivy FS report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: trivy_fs.json
          if-no-files-found: error

  gitleaks_scan:
    name: Gitleaks (Secret Scanning)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install latest gitleaks release (static binary) safely to /usr/local/bin
      - name: Install Gitleaks
        shell: bash
        run: |
          set -e
          GL_VERSION="$(curl -sSL https://api.github.com/repos/gitleaks/gitleaks/releases/latest | grep tag_name | cut -d '"' -f4)"
          curl -sSL -o /tmp/gitleaks.tar.gz "https://github.com/gitleaks/gitleaks/releases/download/${GL_VERSION}/gitleaks_${GL_VERSION#v}_linux_x64.tar.gz"
          sudo tar -xzf /tmp/gitleaks.tar.gz -C /usr/local/bin gitleaks
          /usr/local/bin/gitleaks version

      # Do not fail the pipeline on findings; we just want the report for learning
      - name: Run Gitleaks (warn on findings)
        run: /usr/local/bin/gitleaks detect --source . --no-banner --report-format json --report-path gitleaks_report.json || true

      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks_report.json
          if-no-files-found: error
